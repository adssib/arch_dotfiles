[
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in normal & visual mode
      // Git
      "space g h d": "editor::ToggleSelectedDiffHunks",
      "space g h r": "git::Restore",

      // Toggle inlay hints
      "space t i": "editor::ToggleInlayHints",

      // Toggle soft wrap
      "space u w": "editor::ToggleSoftWrap",

      // NOTE: Toggle Zen mode, not fully working yet
      "space c z": "workspace::ToggleCenteredLayout",

      // Open markdown preview
      "space m p": "markdown::OpenPreview",
      "space m P": "markdown::OpenPreviewToTheSide",

      // Open recent project
      "space f p": "projects::OpenRecent",
      // Search word under cursor
      // "space s w": "pane::DeploySearch",

      // Chat with AI
      "space a a": "agent::ToggleFocus",
      // Go to file with `gf`
      "g f": "editor::OpenExcerpts"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",

      // +LSP
      "space .": "editor::ToggleCodeActions",
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPreviousDiagnostic",
      // TODO: Go to next/prev error
      "] e": "editor::GoToDiagnostic",
      "[ e": "editor::GoToPreviousDiagnostic",
      // Symbol search
      "s s": "outline::Toggle",
      "s S": "project_symbols::Toggle",
      // Diagnostic
      "space x x": "diagnostics::Deploy",

      "space e": "project_panel::ToggleFocus",
      "ctrl-/": "workspace::ToggleBottomDock",
      "space p": "editor::Format",
      "space space": "file_finder::Toggle",
      "shift-l": "pane::ActivateNextItem",
      "shift-h": "pane::ActivatePreviousItem",
      "space v": "pane::SplitRight",
      "space h": "workspace::ActivateNextPane",
      "space l": "workspace::ActivatePreviousPane",
      "space c a": "editor::ToggleCodeActions",
      "q": "pane::CloseActiveItem",
      "shift-q": "pane::CloseInactiveItems",
      "space c r": "editor::Rename"
    }
  },
  // Empty pane, set of keybindings that are available when there is no active editor
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Open file finder
      "space space": "file_finder::Toggle",
      // Open recent project
      "space f p": "projects::OpenRecent"
    }
  },
  // Comment code
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "g c": "editor::ToggleComments"
    }
  },
  // Better escape
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      "j j": "vim::NormalBefore", // remap jj in insert mode to escape
      "j k": "vim::NormalBefore" // remap jk in insert mode to escape
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "alt-h": "vim::Left",
      "alt-l": "vim::Right",
      "alt-j": "vim::Down",
      "alt-k": "vim::Up"
    }
  },
  {
    "context": "Editor && vim_mode == visual",
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
    }
  },
  // File panel
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "space e": "workspace::ToggleRightDock",
      "a": "project_panel::NewFile",
      "n": "project_panel::NewFile",
      "shift-n": "project_panel::NewDirectory",
      "d": "project_panel::Trash",
      "l": "project_panel::Open",
      "r": "project_panel::Rename",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  // Panel nagivation
  {
    "context": "Dock",
    "bindings": {
      "ctrl-w h": "workspace::ActivatePaneLeft",
      "ctrl-w l": "workspace::ActivatePaneRight",
      "ctrl-w k": "workspace::ActivatePaneUp",
      "ctrl-w j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-/": "workspace::ToggleBottomDock",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-shift-l": "pane::ActivateNextItem",
      "ctrl-shift-h": "pane::ActivatePreviousItem"
    }
  }
  // {
  //   "context": "VimControl && !menu",
  //   "bindings": {
  //     "w": "vim::NextSubwordStart",
  //     "b": "vim::PreviousSubwordStart",
  //     "e": "vim::NextSubwordEnd",
  //     "g e": "vim::PreviousSubwordEnd"
  //   }
  // }
]
